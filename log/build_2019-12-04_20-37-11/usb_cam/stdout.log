-- The C compiler identification is GNU 7.4.0
-- The CXX compiler identification is GNU 7.4.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found ament_cmake: 0.7.3 (/opt/ros/dashing/share/ament_cmake/cmake)
-- Found PythonInterp: /usr/bin/python3 (found suitable version "3.6.9", minimum required is "3") 
-- Using PYTHON_EXECUTABLE: /usr/bin/python3
-- Override CMake install command with custom implementation using symlinks instead of copying resources
-- Found OpenCV: /usr (found version "3.2.0") 
-- Found image_transport: 2.1.1 (/opt/ros/dashing/share/image_transport/cmake)
-- Found rosidl_adapter: 0.7.7 (/opt/ros/dashing/share/rosidl_adapter/cmake)
-- Found rmw_implementation_cmake: 0.7.2 (/opt/ros/dashing/share/rmw_implementation_cmake/cmake)
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - not found
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE  
-- Found tinyxml2_vendor:  (/opt/ros/dashing/share/tinyxml2_vendor/cmake)
-- Found TinyXML2: /usr/lib/aarch64-linux-gnu/libtinyxml2.so  
-- Found poco_vendor:  (/opt/ros/dashing/share/poco_vendor/cmake)
-- Found cv_bridge: 2.1.2 (/home/portia/ros2Bot_ws/install/cv_bridge/share/cv_bridge/cmake)
-- Found ament_lint_auto: 0.7.11 (/opt/ros/dashing/share/ament_lint_auto/cmake)
-- Added test 'copyright' to check for copyright in CMake / C / C++ / Python code
-- Added test 'cppcheck' to perform static code analysis on C / C++ code
-- Configured cppcheck include dirs: $<BUILD_INTERFACE:/home/portia/ros2Bot_ws/usb_cam/include>
-- Added test 'cpplint' to check C / C++ code against the Google style
-- Added test 'lint_cmake' to check CMake code style
-- Added test 'uncrustify' to check C / C++ code style
-- Added test 'xmllint' to check XML markup files
-- Configuring done
-- Generating done
-- Build files have been written to: /home/portia/ros2Bot_ws/build/usb_cam
[35m[1mScanning dependencies of target cam_node[0m
[ 50%] [32mBuilding CXX object CMakeFiles/cam_node.dir/src/cam_node.cpp.o[0m
[100%] [32m[1mLinking CXX executable cam_node[0m
[100%] Built target cam_node
[100%] Built target cam_node
[36mInstall the project...[0m
-- Install configuration: ""
-- Execute custom install script
-- Symlinking: /home/portia/ros2Bot_ws/install/usb_cam/share/ament_index/resource_index/package_run_dependencies/usb_cam
-- Symlinking: /home/portia/ros2Bot_ws/install/usb_cam/share/ament_index/resource_index/parent_prefix_path/usb_cam
-- Symlinking: /home/portia/ros2Bot_ws/install/usb_cam/share/usb_cam/environment/ament_prefix_path.sh
-- Symlinking: /home/portia/ros2Bot_ws/install/usb_cam/share/usb_cam/environment/path.sh
-- Symlinking: /home/portia/ros2Bot_ws/install/usb_cam/share/usb_cam/local_setup.bash
-- Symlinking: /home/portia/ros2Bot_ws/install/usb_cam/share/usb_cam/local_setup.sh
-- Symlinking: /home/portia/ros2Bot_ws/install/usb_cam/share/usb_cam/local_setup.zsh
-- Symlinking: /home/portia/ros2Bot_ws/install/usb_cam/share/ament_index/resource_index/packages/usb_cam
-- Symlinking: /home/portia/ros2Bot_ws/install/usb_cam/share/usb_cam/cmake/usb_camConfig.cmake
-- Symlinking: /home/portia/ros2Bot_ws/install/usb_cam/share/usb_cam/cmake/usb_camConfig-version.cmake
-- Symlinking: /home/portia/ros2Bot_ws/install/usb_cam/share/usb_cam/package.xml
-- Installing: /home/portia/ros2Bot_ws/install/usb_cam/lib/usb_cam/cam_node
-- Set runtime path of "/home/portia/ros2Bot_ws/install/usb_cam/lib/usb_cam/cam_node" to ""
